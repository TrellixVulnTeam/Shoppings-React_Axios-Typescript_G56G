{"ast":null,"code":"import http from \"../http-common\";\n\nclass TutorialDataService {\n  getAll() {\n    return http.get(\"/products\");\n  }\n\n  get(id) {\n    return http.get(`/products/${id}`);\n  }\n\n  create(data) {\n    return http.post(\"/products\", data);\n  }\n\n  update(data, id) {\n    return http.put(`/products/${id}`, data);\n  }\n\n  delete(id) {\n    return http.delete(`/products/${id}`);\n  }\n\n  deleteAll() {\n    return http.delete(`/products`);\n  }\n\n  findByTitle(name) {\n    return http.get(`/products?name=${name}`);\n  }\n\n}\n\nexport default new TutorialDataService();","map":{"version":3,"sources":["/Users/ike/Documents/shopping-nodejs-express-sequelize-mysql/react-axios-typescript/src/services/service.service.ts"],"names":["http","TutorialDataService","getAll","get","id","create","data","post","update","put","delete","deleteAll","findByTitle","name"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,gBAAjB;;AAGA,MAAMC,mBAAN,CAA0B;AACxBC,EAAAA,MAAM,GAAG;AACP,WAAOF,IAAI,CAACG,GAAL,CAAS,WAAT,CAAP;AACD;;AAEDA,EAAAA,GAAG,CAACC,EAAD,EAAa;AACd,WAAOJ,IAAI,CAACG,GAAL,CAAU,aAAYC,EAAG,EAAzB,CAAP;AACD;;AAEDC,EAAAA,MAAM,CAACC,IAAD,EAAsB;AAC1B,WAAON,IAAI,CAACO,IAAL,CAAU,WAAV,EAAuBD,IAAvB,CAAP;AACD;;AAEDE,EAAAA,MAAM,CAACF,IAAD,EAAsBF,EAAtB,EAA+B;AACnC,WAAOJ,IAAI,CAACS,GAAL,CAAU,aAAYL,EAAG,EAAzB,EAA4BE,IAA5B,CAAP;AACD;;AAEDI,EAAAA,MAAM,CAACN,EAAD,EAAU;AACd,WAAOJ,IAAI,CAACU,MAAL,CAAa,aAAYN,EAAG,EAA5B,CAAP;AACD;;AAEDO,EAAAA,SAAS,GAAG;AACV,WAAOX,IAAI,CAACU,MAAL,CAAa,WAAb,CAAP;AACD;;AAEDE,EAAAA,WAAW,CAACC,IAAD,EAAe;AACxB,WAAOb,IAAI,CAACG,GAAL,CAAU,kBAAiBU,IAAK,EAAhC,CAAP;AACD;;AA3BuB;;AA8B1B,eAAe,IAAIZ,mBAAJ,EAAf","sourcesContent":["import http from \"../http-common\";\nimport ITutorialData from \"../types/products.type\"\n\nclass TutorialDataService {\n  getAll() {\n    return http.get(\"/products\");\n  }\n\n  get(id: string) {\n    return http.get(`/products/${id}`);\n  }\n\n  create(data: ITutorialData) {\n    return http.post(\"/products\", data);\n  }\n\n  update(data: ITutorialData, id: any) {\n    return http.put(`/products/${id}`, data);\n  }\n\n  delete(id: any) {\n    return http.delete(`/products/${id}`);\n  }\n\n  deleteAll() {\n    return http.delete(`/products`);\n  }\n\n  findByTitle(name: string) {\n    return http.get(`/products?name=${name}`);\n  }\n}\n\nexport default new TutorialDataService();"]},"metadata":{},"sourceType":"module"}